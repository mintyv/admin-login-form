{"version":3,"sources":["Posts.js","action.js","App.js","reducers.js","index.js","autologger.js"],"names":["Posts","dispatch","useDispatch","posts","useSelector","state","useEffect","getState","a","type","axios","get","response","payload","data","error","homeGames","awayGames","pctHomeWin","pctAwayWin","homeGoals","awayGoals","totGoals","loading","items","map","el","reduce","count","home_team_country","away_team_country","Math","round","homeCount","parseInt","home_team","goals","awayCount","away_team","className","App","initState","postReducer","action","filter","x","enhancer","compose","applyMiddleware","thunk","createStore","initialState","store","console","log","JSON","stringify","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f317289.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchPosts } from \"./action\";\r\nimport './App.css';\r\n\r\nfunction Posts() {\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector((state) => state);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPosts());\r\n  }, [dispatch]);\r\n\r\n  \r\n  let homeGames = 0;\r\n  let awayGames = 0;\r\n  let pctHomeWin = 0;\r\n  let pctAwayWin = 0;\r\n  let homeGoals = 0;\r\n  let awayGoals = 0;\r\n  let totGoals = 0;\r\n\r\n  const renderPosts = () => {\r\n    if (posts.loading) {\r\n      return <h1>Loading...</h1>;\r\n      console.log(\"loading\");\r\n    }\r\n    return posts.items.map((el) => {\r\n      {\r\n        homeGames = posts.items.reduce((count, el) => {\r\n          if (el.home_team_country === \"USA\") count++;\r\n          return count;\r\n        }, 0);\r\n      }\r\n\r\n      {\r\n        awayGames = posts.items.reduce((count, el) => {\r\n          if (el.away_team_country === \"USA\") count++;\r\n          return count;\r\n        }, 0);\r\n      }\r\n      {\r\n        pctHomeWin = Math.round((homeGames / 7) * 100);\r\n      }\r\n      {\r\n        pctAwayWin = Math.round((awayGames / 7) * 100);\r\n      }\r\n      {\r\n        homeGoals = posts.items.reduce((homeCount, el) => {\r\n          if (el.home_team_country === \"USA\")\r\n            homeCount += parseInt(el.home_team.goals);\r\n          return homeCount;\r\n        }, 0);\r\n      }\r\n      {\r\n        awayGoals = posts.items.reduce((awayCount, el) => {\r\n          if (el.away_team_country === \"USA\")\r\n            awayCount += parseInt(el.away_team.goals);\r\n          return awayCount;\r\n        }, 0);\r\n      }\r\n      {\r\n        totGoals = homeGoals + awayGoals;\r\n      }\r\n    });\r\n  }\r\n            \r\n      return (\r\n        <div>\r\n          {renderPosts()}\r\n<h3>FIFA World Cup 2019 - Games Played by USA</h3>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"table-data\">No. of Games Played At Home</th>\r\n                <th className=\"table-data\">Percentage Win At Home</th>\r\n                <th className=\"table-data\">No. of Games Played Away</th>\r\n                <th className=\"table-data\">Percentage Win Away</th>\r\n                <th className=\"table-data\">Total Number of Goals</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              <tr>\r\n                <td className=\"table-data\">{homeGames}</td>\r\n                <td className=\"table-data\">{pctHomeWin}</td>\r\n                <td className=\"table-data\">{awayGames}</td>\r\n                <td className=\"table-data\">{pctAwayWin}</td>\r\n                <td className=\"table-data\">{totGoals}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n  };\r\n\r\n\r\nexport default Posts;","import axios from \"axios\";\r\n\r\nexport const fetchPosts = () => async(dispatch, getState) => {\r\n    dispatch ({type: \"FETCH_POSTS_REQUEST\"});\r\n\r\n    try{\r\n    const response = await axios.get(\"//worldcup.sfg.io/matches\");\r\n    \r\n    dispatch ({type: \"FETCH_POSTS_SUCCESS\", payload: response.data});\r\n}\r\n\r\ncatch(error) {\r\n    dispatch ({\r\n        type: \"FETCH_POSTS_FAILURE\",\r\n        error\r\n    });\r\n}\r\n\r\n}\r\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Posts from './Posts';\n\n\nfunction App() {\n  const count = useSelector((state) => state);\n  const dispatch = useDispatch()\n  return (\n    <div>\n      <h1><Posts /></h1>    \n    </div>\n  );\n};\n\nexport default App;","const initState = {\r\n    items: [],\r\n    loading: false,\r\n    error: null,\r\n  };\r\n  \r\n  const postReducer = (state = initState, action) => {\r\n   \r\n    switch (action.type) {\r\n      case \"FETCH_POSTS_REQUEST\":\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n          error: null,\r\n        };\r\n      case \"FETCH_POSTS_SUCCESS\":\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          items: action.payload.filter(\r\n            (x) => x.home_team_country === \"USA\" || x.away_team_country === \"USA\"\r\n          ),\r\n        };\r\n      case \"FETCH_POSTS_FAILURE\":\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          error: action.error,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default postReducer;\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport postReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport autoLogger from \"./autologger\";\n\nconst enhancer = compose(applyMiddleware(thunk), autoLogger());\nconst store = createStore(postReducer, composeWithDevTools(enhancer));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);","export default function autoLogger() {\r\n    return (createStore) => (postReducer, initialState, enhancer) => {\r\n      const store = createStore(postReducer, initialState, enhancer);\r\n      function dispatch(action) {\r\n        console.log(`Dispatch an action: ${JSON.stringify(action)}`);\r\n        const res = store.dispatch(action);\r\n        return res;\r\n      }\r\n      return { ...store, dispatch };\r\n    };\r\n  };\r\n\r\n  "],"sourceRoot":""}